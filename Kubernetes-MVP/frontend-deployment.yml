apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  labels:
    app: api-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-deployment
  template:
    metadata:
      labels:
        app: api-deployment
    spec:
      volumes: 
        - name: file-share
          persistentVolumeClaim:
            claimName: file-share-claim
        - name: app-config-volume
          configMap:
            name: app-config
        - name: secrets
          secret:
            secretName: secret-appsettings
      containers:
      - name: api-deployment-pod
        image: pcarcere/samplewebapi:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 80
        volumeMounts: 
          - name: app-config-volume
            mountPath: /app/config
          - name: secrets
            mountPath: /app/sensitive-config
            readOnly: true
        env:
        - name: ASPNETCORE_URLS
          value: "http://+:80"
        resources:
          limits:
            memory: "128Mi" #128 MB
            cpu: "200m" #200 millicpu (.2 cpu or 20% of the cpu)

---

kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
# The reclaim policy applies to the persistent volumes not the storage class itself. 
# pvs and pvcs that are created using that storage class will inherit the reclaim policy set here.
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: file-share
spec:
  capacity:
    storage: 1Gi
  # volumeMode block feature gate enabled by default with 1.13+
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  # StorageClass has a reclaim policy default so it'll be "inherited" by the PV
  # persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /tmp/data/db
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - docker-desktop

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: file-share-claim
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 1Gi

---

apiVersion: v1
kind: Service
metadata:
 name: api-loadbalancer
spec:
 type: LoadBalancer
 selector:
    app: api-deployment
 ports:
  - name: "80"
    port: 80
    targetPort: 80

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  labels:
    app: app-config
data:
  appsettings.json: |-
    {
      "Database": {
        "ConnectionString": "Sample connection string"
      }
    }